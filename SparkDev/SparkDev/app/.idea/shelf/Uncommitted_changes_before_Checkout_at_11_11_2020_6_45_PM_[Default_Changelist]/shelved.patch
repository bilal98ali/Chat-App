Index: src/main/java/com/example/sparkdev/ChatActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.sparkdev;\r\n\r\n//import android.support.v7.app.AppCompatActivity;\r\n\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.ActionBar;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.ChildEventListener;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\npublic class ChatActivity extends AppCompatActivity {\r\n\r\n    private String messageReceiverID, messageReceiverName, messageReceiverImage, messageSenderID;\r\n\r\n    private TextView userName, userLastSeen;\r\n    private CircleImageView userImage;\r\n\r\n    private Toolbar ChatToolBar;\r\n    private FirebaseAuth nAuth;\r\n    private DatabaseReference RootRef;\r\n\r\n    private ImageButton SendMessageButton;\r\n    private EditText MessageInputText;\r\n\r\n    private final List<Messages> messagesList = new ArrayList<>();\r\n    private LinearLayoutManager linearLayoutManager;\r\n    private MessageAdapter messageAdapter;\r\n    private RecyclerView userMessagesList;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_chat);\r\n\r\n\r\n        nAuth = FirebaseAuth.getInstance();\r\n        messageSenderID = nAuth.getCurrentUser().getUid();\r\n        //kev task43\r\n        RootRef = FirebaseDatabase.getInstance().getReference();\r\n\r\n\r\n        messageReceiverID = getIntent().getExtras().get(\"visit_user_id\").toString();\r\n        messageReceiverName = getIntent().getExtras().get(\"visit_user_name\").toString();\r\n        messageReceiverImage = getIntent().getExtras().get(\"visit_image\").toString();\r\n\r\n\r\n        InitializeControllers();\r\n\r\n        userName.setText(messageReceiverName);\r\n        Picasso.get().load(messageReceiverImage).placeholder(R.drawable.profile_image).into(userImage);\r\n\r\n\r\n        SendMessageButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                SendMessage();\r\n                //on user click, SendMessage() -kev task48\r\n            }\r\n        });\r\n    }\r\n\r\n    private void InitializeControllers() {\r\n        ChatToolBar = (Toolbar) findViewById(R.id.chat_toolbar);\r\n        setSupportActionBar(ChatToolBar);\r\n\r\n        ActionBar actionBar = getSupportActionBar();\r\n        actionBar.setDisplayHomeAsUpEnabled(true);\r\n        actionBar.setDisplayShowCustomEnabled(true);\r\n\r\n        LayoutInflater layoutInflater = (LayoutInflater) this.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n        View actionBarView = layoutInflater.inflate(R.layout.custom_chat_bar, null);\r\n        actionBar.setCustomView(actionBarView);\r\n\r\n        userName = (TextView) findViewById(R.id.custom_profile_name);\r\n        userLastSeen = (TextView) findViewById(R.id.custom_user_last_seen);\r\n        userImage = (CircleImageView) findViewById(R.id.custom_profile_image);\r\n\r\n        SendMessageButton = (ImageButton) findViewById(R.id.send_message_btn);\r\n        //must be same \"btn\" from activity_chat.xml or app crashes -kev\r\n        MessageInputText = (EditText) findViewById(R.id.input_message);\r\n\r\n        messageAdapter = new MessageAdapter(messagesList);\r\n        userMessagesList = (RecyclerView) findViewById(R.id.private_messages_list_of_users);\r\n        linearLayoutManager = new LinearLayoutManager(this);\r\n        userMessagesList.setLayoutManager(linearLayoutManager);\r\n        userMessagesList.setAdapter(messageAdapter);\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n\r\n        RootRef.child(\"Messages\").child(messageSenderID).child(messageReceiverID)\r\n                .addChildEventListener(new ChildEventListener() {\r\n                    @Override\r\n                    public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {\r\n\r\n                        Messages messages = snapshot.getValue(Messages.class);\r\n\r\n                        messagesList.add(messages);\r\n\r\n                        messageAdapter.notifyDataSetChanged();\r\n                    }\r\n\r\n                    @Override\r\n                    public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onChildRemoved(@NonNull DataSnapshot snapshot) {\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void SendMessage() {\r\n        String messageText = MessageInputText.getText().toString();\r\n\r\n        if (TextUtils.isEmpty(messageText))\r\n        {\r\n            Toast.makeText(this, \"There is nothing to send...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n        else\r\n        {\r\n            String messageSenderRef = \"Messages/\" + messageSenderID + \"/\" + messageReceiverID;\r\n            String messageReceiverRef = \"Messages/\" + messageReceiverID + \"/\" + messageSenderID;\r\n\r\n\r\n            DatabaseReference userMessageKeyRef = RootRef.child(\"Messages\")\r\n                    .child(messageSenderID)\r\n                    .child(messageReceiverID).push();\r\n\r\n            String messagePushID = userMessageKeyRef.getKey();\r\n\r\n            Map messageTextBody = new HashMap();\r\n            messageTextBody.put(\"message\", messageText);\r\n            messageTextBody.put(\"type\", \"text\");\r\n            messageTextBody.put(\"from\", messageSenderID);\r\n\r\n            Map messageBodyDetails = new HashMap();\r\n            messageBodyDetails.put(messageSenderRef + \"/\" + messagePushID, messageTextBody);\r\n\r\n            RootRef.updateChildren(messageBodyDetails).addOnCompleteListener(new OnCompleteListener() {\r\n                @Override\r\n                public void onComplete(@NonNull Task task) {\r\n                    if (task.isSuccessful())\r\n                    {\r\n                        Toast.makeText(ChatActivity.this, \"Message Sent Successfully...\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                    else\r\n                    {\r\n                        Toast.makeText(ChatActivity.this, \"Error\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                    MessageInputText.setText(\"\");\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/sparkdev/ChatActivity.java	(revision 0de5516aa5ea86632dc115b9ae0170bd77fd70fb)
+++ src/main/java/com/example/sparkdev/ChatActivity.java	(date 1605137412909)
@@ -179,6 +179,7 @@
 
             Map messageBodyDetails = new HashMap();
             messageBodyDetails.put(messageSenderRef + "/" + messagePushID, messageTextBody);
+            messageBodyDetails.put(messageReceiverRef + "/" + messagePushID, messageTextBody);
 
             RootRef.updateChildren(messageBodyDetails).addOnCompleteListener(new OnCompleteListener() {
                 @Override
Index: src/main/java/com/example/sparkdev/MessageAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.sparkdev;\r\n\r\nimport android.graphics.Color;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.List;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\npublic class MessageAdapter extends RecyclerView.Adapter<MessageAdapter.MessageViewHolder> {\r\n\r\n    private List<Messages> userMessagesList;\r\n    private FirebaseAuth nAuth;\r\n    private DatabaseReference usersRef;\r\n\r\n\r\n    public MessageAdapter (List<Messages> userMessagesList) {\r\n        this.userMessagesList = userMessagesList;\r\n\r\n    }\r\n\r\n    public class MessageViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        public TextView senderMessageText, receiverMessageText;\r\n        public CircleImageView receiverProfileImage;\r\n\r\n\r\n        public MessageViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n\r\n            senderMessageText = (TextView) itemView.findViewById(R.id.sender_message_text);\r\n            receiverMessageText = (TextView) itemView.findViewById(R.id.receiver_message_text);\r\n            receiverProfileImage = (CircleImageView) itemView.findViewById(R.id.message_profile_image);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    @NonNull\r\n    @Override\r\n    public MessageViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View view = LayoutInflater.from(parent.getContext())\r\n                .inflate(R.layout.custom_messages_layout, parent, false);\r\n        //parent from ViewGroup parent from generating method. -kev50\r\n\r\n        nAuth = FirebaseAuth.getInstance();\r\n\r\n        return new MessageViewHolder(view);\r\n    }\r\n\r\n\r\n\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull final MessageViewHolder holder, int position) {\r\n    //public void onBindViewHolder(@NonNull final MessageViewHolder messageViewHolder...\r\n    //ia  hia line. I don't know if final is necessary or not. -kev50\r\n        String messageSenderId = nAuth.getCurrentUser().getUid();\r\n        Messages messages = userMessagesList.get(position);\r\n\r\n        String fromUserID = messages.getFrom();\r\n        String fromMessageType = messages.getType(); //Text or file. For now, just text -kev50\r\n\r\n        usersRef = FirebaseDatabase.getInstance().getReference().child(\"Users\").child(fromUserID);\r\n\r\n        usersRef.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.hasChild(\"image\"))\r\n                {\r\n                    String receiverImage = snapshot.child(\"image\").getValue().toString();\r\n\r\n                    Picasso.get().load(receiverImage).placeholder(R.drawable.profile_image)\r\n                            .into(holder.receiverProfileImage);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n        if (fromMessageType.equals(\"text\"))\r\n        {\r\n            holder.receiverMessageText.setVisibility(View.INVISIBLE);\r\n            holder.receiverProfileImage.setVisibility(View.INVISIBLE);\r\n\r\n            if (fromUserID.equals(messageSenderId))\r\n            {\r\n                holder.senderMessageText.setBackgroundResource(R.drawable.sender_messages_layout);\r\n                holder.senderMessageText.setTextColor(Color.BLACK);\r\n                //Color is from android.graphics, but there is an option com.google.type I did\r\n                //not check. The default color without this line of code is black, but is left\r\n                //for customization. -kev50\r\n                holder.senderMessageText.setText(messages.getMessage());\r\n            }\r\n            else\r\n            {\r\n                holder.senderMessageText.setVisibility(View.INVISIBLE);\r\n\r\n                holder.receiverProfileImage.setVisibility(View.VISIBLE);\r\n                holder.receiverMessageText.setVisibility(View.VISIBLE);\r\n\r\n                holder.receiverMessageText.setBackgroundResource(R.drawable.receiver_messages_layout);\r\n                holder.receiverMessageText.setTextColor(Color.BLACK);\r\n                holder.receiverMessageText.setText(messages.getMessage());\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return userMessagesList.size();\r\n        //how many messages are available -kev50\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/sparkdev/MessageAdapter.java	(revision 0de5516aa5ea86632dc115b9ae0170bd77fd70fb)
+++ src/main/java/com/example/sparkdev/MessageAdapter.java	(date 1605137125788)
@@ -103,6 +103,7 @@
 
             if (fromUserID.equals(messageSenderId))
             {
+
                 holder.senderMessageText.setBackgroundResource(R.drawable.sender_messages_layout);
                 holder.senderMessageText.setTextColor(Color.BLACK);
                 //Color is from android.graphics, but there is an option com.google.type I did
